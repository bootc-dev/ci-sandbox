name: bootc integration test
on:
  pull_request:
    branches: [main]  
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        #test_os: [fedora-42, fedora-43, centos-9, centos-10]
        test_os: [centos-10]
        test_runner: [ubuntu-24.04]

    runs-on: ${{ matrix.test_runner }}

    steps:
      - name: Install podman for heredoc support
        run: |
          set -eux
          echo 'deb [trusted=yes] https://ftp.debian.org/debian/ testing main' | sudo tee /etc/apt/sources.list.d/testing.list
          sudo apt update
          sudo apt install -y crun/testing podman/testing just

      - uses: actions/checkout@v5

      - name: Set architecture variable
        id: set_arch
        run: echo "ARCH=$(arch)" >> $GITHUB_ENV

      - name: Build bootc and bootc image
        run: |
          sudo tests/build.sh ${{ matrix.test_os }}

      - name: Archive bootc disk image - disk.raw
        uses: actions/upload-artifact@v5
        with:
          name: PR-${{ github.event.number }}-${{ matrix.test_os }}-${{ env.ARCH }}-disk
          path: target/disk.raw
          retention-days: 1

  test:
    needs: build
    strategy:
      matrix:
        #test_os: [fedora-42, fedora-43, centos-9, centos-10]
        test_os: [centos-10]
        tmt_plan: [test-01-readonly, test-20-local-upgrade, test-21-logically-bound-switch, test-22-logically-bound-install, test-23-install-outside-container, test-24-local-upgrade-reboot]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set architecture variable
        id: set_arch
        run: echo "ARCH=$(arch)" >> $GITHUB_ENV

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt install -y qemu-kvm qemu-system just
          pip install --user tmt

      - name: Create folder to save disk image
        run: mkdir -p target

      - name: Download disk.raw
        uses: actions/download-artifact@v6
        with:
          name: PR-${{ github.event.number }}-${{ matrix.test_os }}-${{ env.ARCH }}-disk
          path: target

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls -l /dev/kvm

      - name: Run test
        run: |
          ls -al target
          tests/test.sh ${{ matrix.tmt_plan }}

      - name: Archive TMT logs
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: tmt-log-PR-${{ github.event.number }}-${{ matrix.test_os }}-${{ env.ARCH }}-${{ matrix.tmt_plan }}
          path: /var/tmp/tmt
